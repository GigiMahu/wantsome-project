pipeline {
    environment {
        registry = "gigimahu/p-load_balancer"
        registryCredential = 'dockerhub_id'
        dockerImage = ''
        dockerFile = 'dockerfile.load_balancer'
    }
    agent any
    stages {
        stage('Cloning Git') {
            steps {
                git 'https://github.com/GigiMahu/wantsome-project.git'
            }
        }
        stage('Building Docker image') {
            steps{
                script {
                    dockerImage = docker.build(registry,"-f ./dockerfiles/${dockerFile} .")
                }
            }
        }
        stage('Push Docker image on DockerHub') {
            steps{
                script {
                    docker.withRegistry( '', registryCredential ) {
                        dockerImage.push()
                    }
                }
            }
        }
        stage('Run Container on Env Server'){
            def dockerRun = "docker run -p 8080:80 -d --name my-app ${registry}"
            sshagent(['env_server']) {
                sh "ssh -o StrictHostKeyChecking=no docker@192.168.56.20 ${dockerRun}"
            }
        }
    }
}